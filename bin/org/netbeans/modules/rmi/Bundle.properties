#                 Sun Public License Notice
# 
# The contents of this file are subject to the Sun Public License
# Version 1.0 (the "License"). You may not use this file except in
# compliance with the License. A copy of the License is available at
# http://www.sun.com/
# 
# The Original Code is NetBeans. The Initial Developer of the Original
# Code is Sun Microsystems, Inc. Portions Copyright 1997-2001 Sun
# Microsystems, Inc. All Rights Reserved.


## RMIDebugTypeBeanInfo
PROP_debugName = Identifying Name
HINT_debugName = Identifying name.

## Settings
PROP_hostname = Hostname
HINT_hostname = Hostname.
PROP_hostIP = Host IP
HINT_hostIP = Host IP address.
PROP_internalHttpPort = Internal HTTP Port
HINT_internalHttpPort = Internal HTTP port.
PROP_repositoryURL = Filesystems URL
HINT_repositoryURL = Filesystems URL.
PROP_repositoryIPURL = Filesystems IP URL
HINT_repositoryIPURL = Filesystems IP address URL.

## RMI Debugger
PROP_RMIDebugTypeName=RMI Debugging
MSG_DebuggerHint=\
    {classic} = classic virtual machine switch (for use with HotSpot)\n\
    {debuggerOptions} = debugger-specific options\n\
    {filesystems} = contents of Filesystems (development classpath)\n\
    {classpath} = classpath\n\
    {bootclasspath} = system classpath\n\
    {bootclasspathSwitch} = system classpath switch\n\
    {library} = system library path\n\
    {main} = name of the class to be executed\n\
    {hostname} = host name of the local machine\n\
    {hostIP} = IP address of the local machine\n\
    {internalHttPort} = port of the internal HTTP server\n\
    {filesystemsURL} = URL of Filesystems as exported by the internal HTTP server\n\
    {filesystemsIPURL} = URL of Filesystems with IP address\n\
    --- Additional settings (from RMI Object) ---\n\
    {port} = port for export\n\
    {service} = service URL (for registration in the RMI Registry)\n\

# RMIDataLoaderBeanInfo
PROP_Name=Name
HINT_Name=Name of the RMI source object type.

## RMI Data Node
PROP_RMIExport=RMI Export

PROP_port=Port
HINT_port=Port for export.

PROP_service_name=Service URL
HINT_service_name=URL of the service for the RMI registry.

PROP_registry_port=Registry port
HINT_registry_port=Port number of the RMI registry.

## RMI Executor
LAB_RMIExecutor=RMI Executor
PROP_RMIExecutorName=RMI Executor

MSG_ExecutorHint=\
    {java.home} = JDK installation directory\n\
    {/} = file name separator character\n\
    {:} = (class-)path separator character\n\
    ---------------------------------------------\n\
    {filesystems} = content of Filesystems (development classpath)\n\
    {classpath} = classpath\n\
    {bootclasspath} = system classpath\n\
    {library} = system library path\n\
    {classname} = name of the class to be executed\n\
    {arguments} = command-line arguments to pass to the Java application (not VM!)\n\
    {hostname} = host name of the local machine\n\
    {hostIP} = IP address of the local machine\n\
    {internalHttPort} = port of the internal HTTP server\n\
    {filesystemsURL} = URL of Filesystems exported by the internal HTTP server\n\
    {filesystemsIPURL} = URL of Filesystems with IP address\n\
    --- Additional Settings (for RMI) ---\n\
    {port} = port for export\n\
    {service} = service URL (for registration in the RMI Registry)\n\

## RMIDataObject

## RMIDataLoader
PROP_RMILoader_Name=RMI Sources
CTL_OPTION_YES = Yes
CTL_OPTION_YES_ALL = Yes to All
CTL_OPTION_NO = No
CTL_OPTION_NO_ALL = No to All
CTL_CONFIRMATION_TITLE = Confirmation
# {0} - class name
FMT_CONVERT_MESSAGE = Class {0} implements the java.rmi.Remote interface. Do you wish to mark it as an RMI object?

## RMIStubCompiler
CTL_RMIStubCompilerType = RMI Stub Compiler
PROP_STUB_COMPILER = Stub compiler
HINT_STUB_COMPILER = RMI stub compiler.

MSG_CompilerHint=\
    {java.home} = JDK installation directory\n\
    {/} = file name separator character\n\
    {:} = (class-)path separator character\n\
    ---------------------------------------------\n\
    {filesystems} = content of Filesystems (development classpath)\n\
    {classpath} = classpath\n\
    {bootclasspath} = system classpath\n\
    {library} = system library path\n\
    {classname} = name of the (compiler) class to execute\n\
    {files} = files to compile\n\
    {rtclasspath} = path to rt.jar\n\
    {packageRoot} = path to the root of the current filesystem\n

## RMI Registry Item
ERR_Service_Destroy=Access denied. (Probably a non-local host.)
PROP_classAnnotation=Class annotation
HINT_classAnnotation=Location for a class.

## UnicastExportClass
MSG_Unicast_Export_Hint=\
	The class must be a subclass of java.rmi.server.UnicastRemoteObject with a default or\n \
	one-int-parameter constructor; or it must implement java.rmi.Remote and have a default constructor.
# [WARNING] Words java, UnicastExportClass, -port, -service, -verbose, -wait, classname of the following line should not be localized.
MSG_UnicastExportUsage= Usage: java .... UnicastExportClass [-port port] [-service servicename] [-verbose] [-wait time] classname");

## Actions
PROP_Convert2RMIActionName = Convert to RMI

# RMIRegistryRefreshAction
PROP_RMIRegistryRefreshActionName=Refresh

# CreateClientAction
PROP_CreateClientActionName=Copy client code

# SaveInterfaceAction
# [PENDING] this is no longer in this package, no? --jglick
LAB_SelectFilesystem=Select File System
LAB_LookIn=Look in
PROP_SaveInterfaceActionName=Save Interface

# UnicastExportClass
MSG_SuccessfullyExported=Successfully exported.
MSG_ExportFailed=Export failed.
MSG_SuccessfullyRegistered=Successfully registered.
MSG_RegistrationFailed=Registration failed.

# MarkRMIAction
CTL_MARK_RMI = Mark As RMI

# UnMarkRMIAction
CTL_UNMARK_RMI = Cancel RMI
