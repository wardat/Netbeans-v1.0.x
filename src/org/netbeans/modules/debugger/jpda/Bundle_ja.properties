#                 Sun Public License Notice
# 
# The contents of this file are subject to the Sun Public License
# Version 1.0 (the "License"). You may not use this file except in
# compliance with the License. A copy of the License is available at
# http://www.sun.com/
# 
# The Original Code is Forte for Java, Community Edition. The Initial
# Developer of the Original Code is Sun Microsystems, Inc. Portions
# Copyright 1997-2000 Sun Microsystems, Inc. All Rights Reserved.






#JPDADebugger

# EXC_Deadlock=Deadlock in debugged process in {0} detected. Debugger shut down.
EXC_Deadlock={0} \u5185\u306e\u30c7\u30d0\u30c3\u30b0\u4e2d\u306e\u30d7\u30ed\u30bb\u30b9\u5185\u306b\u30c7\u30c3\u30c9\u30ed\u30c3\u30af\u304c\u691c\u51fa\u3055\u308c\u307e\u3057\u305f\u3002\u30c7\u30d0\u30c3\u30ac\u306f\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002
# CTL_Debugger=Debugger
CTL_Debugger=\u30c7\u30d0\u30c3\u30ac
# EXC_starting_debugger=while starting debugger
EXC_starting_debugger=\u30c7\u30d0\u30c3\u30ac\u306e\u8d77\u52d5\u4e2d
# rei: i18n bug ?
# EXC_While_create_debuggee=Exception while starting debugger: \nCannot start process {0}.\n{1}
EXC_While_create_debuggee=\u30c7\u30d0\u30c3\u30ac\u306e\u8d77\u52d5\u4e2d\u306b\u4f8b\u5916\u767a\u751f: \n\u30d7\u30ed\u30bb\u30b9 {0} \u3092\u8d77\u52d5\u3067\u304d\u307e\u305b\u3093\u3002\n{1}
# EXC_Cannot_find_launcher=Exception while starting debugger: \nCan not find {0} debugger launcher.
EXC_Cannot_find_launcher=\u30c7\u30d0\u30c3\u30ac\u306e\u8d77\u52d5\u4e2d\u306b\u4f8b\u5916\u767a\u751f: \n{0} \u30c7\u30d0\u30c3\u30ac\u8d77\u52d5\u30c4\u30fc\u30eb\u304c\u3042\u308a\u307e\u305b\u3093\u3002
# tsu: debugger launcher \u306e\u8a33??
# kyuko:  ok
# EXC_Cannot_find_attaching_launcher=Exception while starting debugger: \nCan not find {0} attaching debugger launcher.
EXC_Cannot_find_attaching_launcher=\u30c7\u30d0\u30c3\u30ac\u306e\u8d77\u52d5\u4e2d\u306b\u4f8b\u5916\u767a\u751f: \n\u30c7\u30d0\u30c3\u30ac\u8d77\u52d5\u30c4\u30fc\u30eb\u306b\u63a5\u7d9a\u3059\u308b {0} \u304c\u3042\u308a\u307e\u305b\u3093\u3002
# EXC_Cannot_find_empty_local_port=Exception while starting debugger: \nCan not find empty local port.\n{0}
EXC_Cannot_find_empty_local_port=\u30c7\u30d0\u30c3\u30ac\u306e\u8d77\u52d5\u4e2d\u306b\u4f8b\u5916\u767a\u751f: \n\u7a7a\u306e\u30ed\u30fc\u30ab\u30eb\u30dd\u30fc\u30c8\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n{0}
# EXC_Unknown_transport_type=Exception while starting debugger: \nUnknown transport type {0}.
EXC_Unknown_transport_type=\u30c7\u30d0\u30c3\u30ac\u306e\u8d77\u52d5\u4e2d\u306b\u4f8b\u5916\u767a\u751f: \n\u30c8\u30e9\u30f3\u30b9\u30dd\u30fc\u30c8\u306e\u7a2e\u985e {0} \u306f\u8a8d\u8b58\u4e0d\u80fd\u3067\u3059\u3002
# rei: unknown \u306e\u8a33
# EXC_While_connecting_to_debuggee=Exception while starting debugger: \nCannot connect to remote VM.\n{0}
EXC_While_connecting_to_debuggee=\u30c7\u30d0\u30c3\u30ac\u306e\u8d77\u52d5\u4e2d\u306b\u4f8b\u5916\u767a\u751f: \n\u30ea\u30e2\u30fc\u30c8 VM \u306b\u63a5\u7d9a\u3067\u304d\u307e\u305b\u3093\u3002\n{0}
# EXC_while_finding_class=while finding class
EXC_while_finding_class=\u30af\u30e9\u30b9\u306e\u691c\u7d22\u4e2d
# rei: i18n bug ?
# kyuko:  ok
# CTL_No_such_class=No such class
CTL_No_such_class=\u6307\u5b9a\u3055\u308c\u305f\u30af\u30e9\u30b9\u306f\u3042\u308a\u307e\u305b\u3093
# rei: \u300c\u305d\u306e\u3088\u3046\u306a\u300d\u306e\u65b9\u304c\u7121\u96e3\u3067\u3057\u3087\u3046\u304b\u3002
# rei: \u305f\u3060\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u300c\u305d\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u306f\u3042\u308a\u307e\u305b\u3093\u300d\u3068\u8a00\u308f\u308c\u308b\u3068\u3001
# rei: \u61a4\u6168\u3092\u542b\u3093\u3060\u304a\u65ad\u308a! \u3068\u3044\u3046\u5370\u8c61\u306b\u306a\u308b\u306e\u3067\u3001\u907f\u3051\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u3002
# kyuko:  \u300c\u3088\u3046\u306a\u300d\u3082\u4e0d\u8981\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3002debugger/debug/Bundle_ja.properties \u3067\u306f\u3001\u300c\u305d\u306e\u3088\u3046\u306a\u300d\u3067\u3057\u305f\u304c\u3002
# EXC_cannt_find_main_method=Cannot find main method
EXC_cannt_find_main_method=main \u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u305b\u3093
# CTL_Debugger_end=Debugger session finished
CTL_Debugger_end=\u30c7\u30d0\u30c3\u30ac\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f
# EXC_Editor=Exception occurred in the Editor
EXC_Editor=\u30a8\u30c7\u30a3\u30bf\u5185\u3067\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f
# CTL_Cannot_set_breakpoint=Cannot set the breakpoint
CTL_Cannot_set_breakpoint=\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u305b\u3093
# CTL_Cannot_clear_breakpoint=Cannot clear the breakpoint
CTL_Cannot_clear_breakpoint=\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u89e3\u9664\u3067\u304d\u307e\u305b\u3093
# CTL_Thread=Thread
CTL_Thread=\u30b9\u30ec\u30c3\u30c9
# CTL_stopped_at=stopped at
CTL_stopped_at=\u505c\u6b62\u5730\u70b9
# tsu : OK?? i18n bug?
# CTL_line=line
CTL_line=\u884c
# CTL_unavailable_source_file=unavailable source file
CTL_unavailable_source_file=\u4f7f\u7528\u3067\u304d\u306a\u3044\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb
# CTL_Thread=Thread
CTL_Thread=\u30b9\u30ec\u30c3\u30c9
# EXC_Debugger=Debugger exception
EXC_Debugger=\u30c7\u30d0\u30c3\u30ac\u4f8b\u5916
# CTL_Exception_event=An exception event occurred in the debugged process
CTL_Exception_event=\u30c7\u30d0\u30c3\u30b0\u4e2d\u306e\u30d7\u30ed\u30bb\u30b9\u5185\u3067\u4f8b\u5916\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u307e\u3057\u305f
# CTL_Thread_death_event=Thread death event
CTL_Thread_death_event=\u30b9\u30ec\u30c3\u30c9\u7d42\u4e86\u30a4\u30d9\u30f3\u30c8
# tsu: death ?
# kyuko:  ok
# CTL_Process_death_event=Process death event
CTL_Process_death_event=\u30d7\u30ed\u30bb\u30b9\u7d42\u4e86\u30a4\u30d9\u30f3\u30c8
# CTL_Thread_stopped=Thread {0} stopped at {1}.{2} line {3}.
CTL_Thread_stopped=\u30b9\u30ec\u30c3\u30c9 {0} \u304c {1}.{2} \u306e\u884c\u756a\u53f7 {3} \u3067\u505c\u6b62\u3057\u307e\u3057\u305f\u3002
# tsu: \u5909\u6570\u8981\u30c1\u30a7\u30c3\u30af
# kyuko:  ok
# CTL_Thread_stopped_no_source=Thread {0} stopped at {1}.{2} line {3} - unavailable source file.
CTL_Thread_stopped_no_source=\u30b9\u30ec\u30c3\u30c9 {0} \u304c {1}.{2} \u306e\u884c\u756a\u53f7 {3} \u3067\u505c\u6b62\u3057\u307e\u3057\u305f - \u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308a\u307e\u305b\u3093\u3002
# CTL_Debugger_starting=Debugger starting
CTL_Debugger_starting=\u30c7\u30d0\u30c3\u30ac\u8d77\u52d5
# CTL_Debugger_running=Debugger running
CTL_Debugger_running=\u30c7\u30d0\u30c3\u30ac\u5b9f\u884c
# CTL_Debugger_version=Default debugger (JPDA)
CTL_Debugger_version=\u30c7\u30d5\u30a9\u30eb\u30c8\u30c7\u30d0\u30c3\u30ac (JPDA)
# CTL_Connecting_to_shmem_noargs=Connecting through shared memory
CTL_Connecting_to_shmem_noargs=\u5171\u6709\u30e1\u30e2\u30ea\u30fc\u3092\u4ecb\u3057\u3066\u63a5\u7d9a
# CTL_Connecting_to_shmem=Connecting through shared memory block {0}
CTL_Connecting_to_shmem=\u5171\u6709\u30e1\u30e2\u30ea\u30fc\u30d6\u30ed\u30c3\u30af {0} \u3092\u4ecb\u3057\u3066\u63a5\u7d9a
# CTL_Connecting_to_socket_noargs=Connecting through network
CTL_Connecting_to_socket_noargs=\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4ecb\u3057\u3066\u63a5\u7d9a
# CTL_Connecting_to_socket=Connecting to {0}:{1}
CTL_Connecting_to_socket={0}:{1} \u306b\u63a5\u7d9a
# CTL_Connecting_to=Connecting
CTL_Connecting_to=\u63a5\u7d9a
# CTL_Reconnecting_to_shmem_noargs=Reconnecting through shared memory
CTL_Reconnecting_to_shmem_noargs=\u5171\u6709\u30e1\u30e2\u30ea\u30fc\u3092\u4ecb\u3057\u3066\u518d\u63a5\u7d9a
# CTL_Reconnecting_to_shmem=Reconnecting through shared memory block {0}
CTL_Reconnecting_to_shmem=\u5171\u6709\u30e1\u30e2\u30ea\u30fc\u30d6\u30ed\u30c3\u30af {0} \u3092\u4ecb\u3057\u3066\u518d\u63a5\u7d9a
# CTL_Reconnecting_to_socket_noargs=Reconnecting through network
CTL_Reconnecting_to_socket_noargs=\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4ecb\u3057\u3066\u518d\u63a5\u7d9a
# CTL_Reconnecting_to_socket=Reconnecting to {0}:{1}
CTL_Reconnecting_to_socket={0}:{1} \u306b\u518d\u63a5\u7d9a
# CTL_Reconnecting_to=Reconnecting
CTL_Reconnecting_to=\u518d\u63a5\u7d9a
# CTL_No_Connector=No connector found
CTL_No_Connector=\u30b3\u30cd\u30af\u30bf\u304c\u3042\u308a\u307e\u305b\u3093
# CTL_Connector=Connector: 
CTL_Connector=\u30b3\u30cd\u30af\u30bf: 
# CTL_Transport=Transport: 
CTL_Transport=\u30c8\u30e9\u30f3\u30b9\u30dd\u30fc\u30c8: 
# CTL_Stop_On_Main_print_text=Thread {threadName} stopped at {className}.{methodName} line {lineNumber}.
CTL_Stop_On_Main_print_text=\u30b9\u30ec\u30c3\u30c9 {threadName} \u304c {className}.{methodName} \u306e {lineNumber} \u884c\u76ee\u3067\u505c\u6b62\u3057\u307e\u3057\u305f\u3002

#TheThreadGroup
# CTL_New_thread_group=Thread group created
CTL_New_thread_group=\u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7\u304c\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f
# CTL_New_thread=Thread created
CTL_New_thread=\u30b9\u30ec\u30c3\u30c9\u304c\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f
# CTL_Thread_destroyed=Thread destroyed
CTL_Thread_destroyed=\u30b9\u30ec\u30c3\u30c9\u304c\u7834\u68c4\u3055\u308c\u307e\u3057\u305f
# CTL_Thread_group_destroyed=Thread group destroyed
CTL_Thread_group_destroyed=\u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7\u304c\u7834\u68c4\u3055\u308c\u307e\u3057\u305f
# CTL_Thread_group_root=Threads
CTL_Thread_group_root=\u30b9\u30ec\u30c3\u30c9

#TheVariable
# EXC_Static=This version of the debugger does not support changing the value of static or local variables.
EXC_Static=\u3053\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30c7\u30d0\u30c3\u30ac\u3067\u306f\u3001static \u5909\u6570\u307e\u305f\u306f\u5c40\u6240\u5909\u6570\u306e\u5024\u306f\u5909\u66f4\u3067\u304d\u307e\u305b\u3093\u3002
# EXC_Wrong_format=Wrong variable format.
EXC_Wrong_format=\u5909\u6570\u306e\u66f8\u5f0f\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002
# EXC_Value_cannt_be_set=Value cannot be set.
EXC_Value_cannt_be_set=\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u305b\u3093\u3002
# EXC_Value_cannt_be_set_info=Value cannot be set:
EXC_Value_cannt_be_set_info=\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u305b\u3093\u3002
# EXC_Unsupported_type=This version of the debugger does not support changing a value of this type.
EXC_Unsupported_type=\u3053\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30c7\u30d0\u30c3\u30ac\u3067\u306f\u3001\u3053\u306e\u578b\u306e\u5024\u306f\u5909\u66f4\u3067\u304d\u307e\u305b\u3093\u3002
# EXC_Cannot_assign_to_expression=Value cannot be set, watch is an expression.
EXC_Cannot_assign_to_expression=\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u305b\u3093\u3002\u30a6\u30a9\u30c3\u30c1\u30dd\u30a4\u30f3\u30c8\u306f\u5f0f\u3067\u3059\u3002
# EXC_Wrong_type=Value cannot be set: invalid type.
EXC_Wrong_type=\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u305b\u3093: \u7121\u52b9\u306a\u578b\u3067\u3059\u3002

#TheWatch
# EXC_No_session=No session
EXC_No_session=\u30bb\u30c3\u30b7\u30e7\u30f3\u306a\u3057
# CTL_No_context=No current context
CTL_No_context=\u73fe\u5728\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306a\u3057

#JPDADebuggerType
# LAB_JPDADebuggerType=JPDA Debugging
LAB_JPDADebuggerType=JPDA \u30c7\u30d0\u30c3\u30b0

#JPDADebuggerTypeBeanInfo
# CTL_JPDADebuggerTypeName=JPDA Debugging
CTL_JPDADebuggerTypeName=JPDA \u30c7\u30d0\u30c3\u30b0

#JPDADebuggerModule
# EXC_JPDA_not_found=The JPDA Debugger Module requires the jpda.jar files from Sun's distribution of JPDA to be installed\nas Java extensions. You can download JPDA from http://java.sun.com/products/jpda/. See the JPDA \nDebugger documentation for more information.
EXC_JPDA_not_found=JPDA \u30c7\u30d0\u30c3\u30ac\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001Sun \u304c\u63d0\u4f9b\u3059\u308b JPDA \u306e jpda.jar \u30d5\u30a1\u30a4\u30eb\u3092 Java \u62e1\u5f35\u6a5f\u80fd\u3068\u3057\u3066\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002JPDA \u306f http://java.sun.com/products/jpda/ \u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\n\u8a73\u7d30\u306f JPDA \u30c7\u30d0\u30c3\u30ac\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002
# MSG_MissingJPDATitle=Info
MSG_MissingJPDATitle=\u60c5\u5831
# PROP_OK=OK
PROP_OK=\u4e86\u89e3
# PROP_URL=Show URL
PROP_URL=URL \u3092\u8868\u793a
# PROP_JPDA_URL=http://java.sun.com/products/jpda/
PROP_JPDA_URL=http://java.sun.com/products/jpda/

#JPDADebuggerType
# EXC_JPDA_not_installed=The JPDA module is not correctly installed. The standard debugger implementation will be launched.
EXC_JPDA_not_installed=JPDA \u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u6b63\u3057\u304f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u6a19\u6e96\u30c7\u30d0\u30c3\u30ac\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002

#ExceptionBreakpoint
# CTL_Exception_event_name_type_name=Exception
CTL_Exception_event_name_type_name=\u4f8b\u5916
# CTL_Exception_event_name_catched=Exception {0} caught
CTL_Exception_event_name_catched=\u4f8b\u5916 {0} \u3092\u30ad\u30e3\u30c3\u30c1\u3057\u307e\u3057\u305f
# CTL_Exception_event_name_uncatched=Exception {0} uncaught
CTL_Exception_event_name_uncatched=\u4f8b\u5916 {0} \u3092\u30ad\u30e3\u30c3\u30c1\u3057\u307e\u305b\u3093\u3067\u3057\u305f
# tsu: uncatch ??
# kyuko:  ok

# CTL_Exception_event_name=Exception {0}
CTL_Exception_event_name=\u4f8b\u5916 {0}
# PROP_Exception_class_name=Exception class name
PROP_Exception_class_name=\u4f8b\u5916\u30af\u30e9\u30b9\u540d
# HINT_Exception_class_name=Name of class (or superclass) of exception
HINT_Exception_class_name=\u4f8b\u5916\u306e\u30af\u30e9\u30b9 (\u307e\u305f\u306f\u30b5\u30d6\u30af\u30e9\u30b9) \u306e\u540d\u524d
# PROP_Exception_type_name=Stop on
PROP_Exception_type_name=\u505c\u6b62\u5730\u70b9
# tsu: OK??
# kyuko:  ok

# HINT_Exception_type_name=The type of action the breakpoint is set on.
HINT_Exception_type_name=\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u7a2e\u985e\u3002
# CTL_Exception_type_catched=Exception caught
CTL_Exception_type_catched=\u30ad\u30e3\u30c3\u30c1\u3057\u305f\u4f8b\u5916
# CTL_Exception_type_uncatched=Exception uncaught
CTL_Exception_type_uncatched=\u30ad\u30e3\u30c3\u30c1\u3057\u306a\u304b\u3063\u305f\u4f8b\u5916
# CTL_Exception_type_both=Exception caught or uncaught
CTL_Exception_type_both=\u30ad\u30e3\u30c3\u30c1\u3057\u305f\u3082\u306e\u3001\u30ad\u30e3\u30c3\u30c1\u3057\u306a\u304b\u3063\u305f\u3082\u306e\u4e21\u65b9\u306e\u4f8b\u5916
# rei: \u69cb\u6587\u304c\u4e0d\u660e
# kyuko:  \u30ad\u30e3\u30c3\u30c1\u3057\u305f\u3082\u306e\u3001\u3057\u306a\u304b\u3063\u305f\u3082\u306e\u4e21\u65b9\u306e\u4f8b\u5916\uff08\u3059\u3079\u3066\u3058\u3083\u306a\u3044\u306e\u304b\uff1f\uff01\uff09

#ExceptionBreakpointPanel
# CTL_Exception_class_name=Exception class name: 
CTL_Exception_class_name=\u4f8b\u5916\u30af\u30e9\u30b9\u540d:
# CTL_Exception_class_name_description=(Enter full name of class of Exception or Error, e.g.: java.lang.InternalError)
CTL_Exception_class_name_description=(\u4f8b\u5916\u307e\u305f\u306f\u30a8\u30e9\u30fc\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u30d5\u30eb\u30cd\u30fc\u30e0\u3067\u5165\u529b\u3002\u4f8b: java.lang.InternalError)
# CTL_Exception_stop_on=Stop on: 
CTL_Exception_stop_on=\u505c\u6b62\u5730\u70b9: 
# CTL_Exception_catch=Exception catch
CTL_Exception_catch=\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1
# CTL_Exception_uncatch=Exception uncatch
CTL_Exception_uncatch=\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3057\u306a\u3044
# CTL_Exception_both=Exception catch or uncatch
CTL_Exception_both=\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\u3059\u308b\u3001\u307e\u305f\u306f\u30ad\u30e3\u30c3\u30c1\u3057\u306a\u3044

#VariableBreakpoint
# CTL_Variable_event_type_name=Variable
CTL_Variable_event_type_name=\u5909\u6570
# CTL_Variable_modification_event_name=Variable {0}.{1} modification
CTL_Variable_modification_event_name=\u5909\u6570 {0}.{1} \u5909\u66f4
# CTL_Variable_access_event_name=Variable {0}.{1} access
CTL_Variable_access_event_name=\u5909\u6570 {0}.{1} \u30a2\u30af\u30bb\u30b9
# CTL_Variable_print_name=Variable {variableName} {action} ({variableValue}).
CTL_Variable_print_name=\u5909\u6570 {variableName} {action} ({variableValue})\u3002
# tsu: { } \u306f\u8a33\u3059??
# kyuko:  \u8a33\u3055\u306a\u3044
# CTL_Access=access
CTL_Access=\u30a2\u30af\u30bb\u30b9
# CTL_Modification=modification
CTL_Modification=\u5909\u66f4
# PROP_breakpoint_class_name=Class name
PROP_breakpoint_class_name=\u30af\u30e9\u30b9\u540d
# HINT_breakpoint_class_name=Name of the class containing this breakpoint.
HINT_breakpoint_class_name=\u3053\u306e\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u542b\u3080\u30af\u30e9\u30b9\u306e\u540d\u524d\u3002
# PROP_breakpoint_field_name=Field name
PROP_breakpoint_field_name=\u30d5\u30a3\u30fc\u30eb\u30c9\u540d
# HINT_breakpoint_field_name=Name of the field containing this breakpoint.
HINT_breakpoint_field_name=\u3053\u306e\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u542b\u3080\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u540d\u524d\u3002
# PROP_breakpoint_type_name=Stop on
PROP_breakpoint_type_name=\u505c\u6b62\u5730\u70b9
# HINT_breakpoint_type_name=The type of action this breakpoint is set on.
HINT_breakpoint_type_name=\u3053\u306e\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u7a2e\u985e\u3002
# CTL_Breakpoint_type_access_value=Variable access
CTL_Breakpoint_type_access_value=\u5909\u6570\u30a2\u30af\u30bb\u30b9
# CTL_Breakpoint_type_modification_value=Variable modification
CTL_Breakpoint_type_modification_value=\u5909\u6570\u5909\u66f4

#VariableBreakpointPanel
# CTL_Variable_access=variable access
CTL_Variable_access=\u5909\u6570\u30a2\u30af\u30bb\u30b9
# CTL_Variable_modification=variable modification
CTL_Variable_modification=\u5909\u6570\u5909\u66f4
# CTL_Variable_class_name=Class name: 
CTL_Variable_class_name=\u30af\u30e9\u30b9\u540d : 
# CTL_Variable_field_name=Field name: 
CTL_Variable_field_name=\u30d5\u30a3\u30fc\u30eb\u30c9\u540d: 
# CTL_Variable_stop_on=Stop on: 
CTL_Variable_stop_on=\u505c\u6b62\u5730\u70b9: 


#MethodBreakpoint
# PROP_breakpoint_class_name=Class name
PROP_breakpoint_class_name=\u30af\u30e9\u30b9\u540d
# HINT_breakpoint_class_name=Name of the class containing this breakpoint.
HINT_breakpoint_class_name=\u3053\u306e\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u542b\u3080\u30af\u30e9\u30b9\u306e\u540d\u524d\u3002
# PROP_breakpoint_method_name=Method Name
PROP_breakpoint_method_name=\u30e1\u30bd\u30c3\u30c9\u540d
# HINT_breakpoint_method_name=Name of the method this breakpoint is set on, if applicable.
HINT_breakpoint_method_name=\u3053\u306e\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u540d\u524d (\u9069\u7528\u53ef\u80fd\u306a\u5834\u5408)\u3002
# tsu: if applicable ?? 
# kyuko:   ok   \u30e1\u30bd\u30c3\u30c9\u540d\u304c\u8868\u793a\u3067\u304d\u306a\u3044\u3053\u3068\u3082\u3042\u308b\uff1f
# PROP_breakpoint_all_methods=All methods
PROP_breakpoint_all_methods=\u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9
# [PENDING] ??? please add comments to bundle file
# hint for "all methods" property - property of breakpoint on method.
# if this property is true, breakpoints are active on all methods in this class (classes).
# HINT_breakpoint_all_methods=Set breakpoints on all methods in the selected classes.
HINT_breakpoint_all_methods=\u9078\u629e\u3057\u305f\u30af\u30e9\u30b9\u5185\u306e\u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u8a2d\u5b9a\u3002
# CTL_Method_event_name=Method {0}.{1}
CTL_Method_event_name=\u30e1\u30bd\u30c3\u30c9 {0}.{1}
# CTL_All_method_event_name=Methods in {0}
CTL_All_method_event_name={0} \u5185\u306e\u30e1\u30bd\u30c3\u30c9

#MethodBreakpointPanel
# CTL_All_methods=All methods for given classes
CTL_All_methods=\u6307\u5b9a\u3055\u308c\u305f\u30af\u30e9\u30b9\u306b\u5bfe\u3059\u308b\u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9
# CTL_Class_name=Class name: 
CTL_Class_name=\u30af\u30e9\u30b9\u540d:
# CTL_Method_name=Method name: 
CTL_Method_name=\u30e1\u30bd\u30c3\u30c9\u540d:

#ThreadBreakpoint
# PROP_breakpoint_type=Set on
PROP_breakpoint_type=\u8a2d\u5b9a\u5730\u70b9
# HINT_breakpoint_type=The type of action this breakpoint is set on.
HINT_breakpoint_type=\u3053\u306e\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u7a2e\u985e\u3002
# CTL_Property_type_start_name=Thread start
CTL_Property_type_start_name=\u30b9\u30ec\u30c3\u30c9\u958b\u59cb
# CTL_Property_type_death_name=Thread death
CTL_Property_type_death_name=\u30b9\u30ec\u30c3\u30c9\u7d42\u4e86
# CTL_Property_type_both_name=Thread start or death
CTL_Property_type_both_name=\u30b9\u30ec\u30c3\u30c9\u958b\u59cb\u307e\u305f\u306f\u7d42\u4e86
# CTL_Thread_event_type_name=Thread
CTL_Thread_event_type_name=\u30b9\u30ec\u30c3\u30c9
# CTL_Thread_start_event_name=Thread start
CTL_Thread_start_event_name=\u30b9\u30ec\u30c3\u30c9\u958b\u59cb
# CTL_Thread_death_event_name=Thread death
CTL_Thread_death_event_name=\u30b9\u30ec\u30c3\u30c9\u7d42\u4e86
# CTL_Thread_event_name=Thread start / death
CTL_Thread_event_name=\u30b9\u30ec\u30c3\u30c9\u958b\u59cb / \u7d42\u4e86
# CTL_Thread_print_name=Thread {threadName} {action}.
CTL_Thread_print_name=\u30b9\u30ec\u30c3\u30c9 {threadName} {action}\u3002
# tsu: { } \u306f\u8a33\u3059??
# kyuko:  \u8a33\u3057\u307e\u305b\u3093
# CTL_Started=started
CTL_Started=\u958b\u59cb
# rei: ...ed \u306e\u8a33
# kyuko:  ok   \u5b9f\u884c\u4e2d\uff08\u958b\u59cb\u4e2d\uff1f\uff09\u3082\u8003\u3048\u3089\u308c\u308b\u304c\u3002
# CTL_Death=death
CTL_Death=\u7d42\u4e86

#ThreadBreakpointPanel
# CTL_Thread_start=Thread start
CTL_Thread_start=\u30b9\u30ec\u30c3\u30c9\u958b\u59cb
# CTL_Thread_death=Thread death
CTL_Thread_death=\u30b9\u30ec\u30c3\u30c9\u7d42\u4e86
# CTL_Thread_both=Thread start or death
CTL_Thread_both=\u30b9\u30ec\u30c3\u30c9\u958b\u59cb\u307e\u305f\u306f\u7d42\u4e86
# CTL_Thread_Set_breakpoint_on=Set breakpoint on: 
CTL_Thread_Set_breakpoint_on=\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u8a2d\u5b9a\u5730\u70b9:

#ClassBreakpoint
# PROP_class_filter=Class filter
PROP_class_filter=\u30af\u30e9\u30b9\u30d5\u30a3\u30eb\u30bf
# HINT_class_filter=Class filter
HINT_class_filter=\u30af\u30e9\u30b9\u30d5\u30a3\u30eb\u30bf
# PROP_class_exclusion_filter=Exclusion filter
PROP_class_exclusion_filter=\u6392\u4ed6\u7684\u30d5\u30a3\u30eb\u30bf
# rei: \u8a33\u3053\u308c\u3067\u3088\u3044 ?
# kyuko:  ok
# [PENDING] not very useful hint...
# HINT_class_exclusion_filter=Select whether this class filter is exclusive.
HINT_class_exclusion_filter=\u3053\u306e\u30af\u30e9\u30b9\u30d5\u30a3\u30eb\u30bf\u304c\u6392\u4ed6\u7684\u304b\u3069\u3046\u304b\u3092\u9078\u629e\u3002
# kyuko:  \u3053\u308c\u306f\u82f1\u8a9e\u304c\u5909\u306a\u6c17\u304c\u3059\u308b...
# PROP_class_type=Set breakpoint on
PROP_class_type=\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u8a2d\u5b9a\u5730\u70b9
# HINT_class_type=The type of action the breakpoint is set on.
HINT_class_type=\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u7a2e\u985e\u3002
# CTL_Breakpoint_type_class_prepare=Class prepare
CTL_Breakpoint_type_class_prepare=\u30af\u30e9\u30b9\u6e96\u5099
# CTL_Breakpoint_type_class_unload=Class unload
CTL_Breakpoint_type_class_unload=\u30af\u30e9\u30b9\u8aad\u307f\u8fbc\u307f\u89e3\u9664
# CTL_Breakpoint_type_class_both=Class prepare or unload
CTL_Breakpoint_type_class_both=\u30af\u30e9\u30b9\u6e96\u5099\u307e\u305f\u306f\u8aad\u307f\u8fbc\u307f\u89e3\u9664
# CTL_Class_event_type_name=Class
CTL_Class_event_type_name=\u30af\u30e9\u30b9
# CTL_Class_prepare_event_name=Class {0} prepare
CTL_Class_prepare_event_name=\u30af\u30e9\u30b9 {0} \u3092\u6e96\u5099
# CTL_Class_unload_event_name=Class {0} unload
CTL_Class_unload_event_name=\u30af\u30e9\u30b9 {0} \u3092\u8aad\u307f\u8fbc\u307f\u89e3\u9664
# CTL_Class_event_name=Class {0} prepare / unload
CTL_Class_event_name=\u30af\u30e9\u30b9 {0} \u6e96\u5099 / \u8aad\u307f\u8fbc\u307f\u89e3\u9664
# CTL_Class_print_name=Class {className} {action}
CTL_Class_print_name=\u30af\u30e9\u30b9 {className} {action}
# tsu: { } \u306f\u8a33\u3059??
# kyuko:  \u8a33\u3057\u307e\u305b\u3093
# CTL_Prepared=prepared
CTL_Prepared=\u6e96\u5099
# rei: ..ed \u306e\u8a33
# kyuko:  ok
# CTL_Unload=unload
CTL_Unload=\u8aad\u307f\u8fbc\u307f\u89e3\u9664

#ClassBreakpointPanel
# CTL_Class_filter=Class filter: 
CTL_Class_filter=\u30af\u30e9\u30b9\u30d5\u30a3\u30eb\u30bf:
# CTL_Class_exclusion_filter=Exclusion filter
CTL_Class_exclusion_filter=\u6392\u4ed6\u7684\u30d5\u30a3\u30eb\u30bf:
# CTL_Class_breakpoint_type=Breakpoint set on: 
CTL_Class_breakpoint_type=\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u8a2d\u5b9a\u5730\u70b9:
# CTL_Class_filter_hint=Set exclusion / non-exclusion filter for classes
CTL_Class_filter_hint=\u30af\u30e9\u30b9\u306b\u6392\u4ed6\u7684\u307e\u305f\u306f\u6392\u4ed6\u7684\u3067\u306a\u3044\u30d5\u30a3\u30eb\u30bf\u3092\u8a2d\u5b9a
# CTL_Class_prepare=Class prepare
CTL_Class_prepare=\u30af\u30e9\u30b9\u6e96\u5099
# CTL_Class_unload=Class unload
CTL_Class_unload=\u30af\u30e9\u30b9\u8aad\u307f\u8fbc\u307f\u89e3\u9664
# CTL_Class_both=Class prepare or unload
CTL_Class_both=\u30af\u30e9\u30b9\u6e96\u5099\u307e\u305f\u306f\u8aad\u307f\u8fbc\u307f\u89e3\u9664
